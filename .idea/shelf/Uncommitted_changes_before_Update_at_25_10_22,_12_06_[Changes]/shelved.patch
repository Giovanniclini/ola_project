Index: Progetto_Nuovo/Data_Structures/ContextClass.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n\nclass ContextClass:\n    def __init__(self):\n        self.collected_rewards = []\n        self.binary_features = []\n        self.learners = []\n        self.current_split = []\n        self.split_list = [[-1, -1], [0, -1], [1, -1], [0, 0], [0, 1], [1, 0], [1, 1]]\n        self.pending_list = []\n\n\n    def update(self, reward):\n        self.collected_rewards.append(reward)\n\n\n    def split(self):\n        if len(self.current_split) == 0:\n            self.current_split.append(split_list[0])\n        if current_split[0] == [-1, -1]:\n            self.current_split.pop(0)\n            self.split_list.pop(0)\n            self.current_split.append(self.split_list[:2])\n        if self.current_split[0] == [0, -1] and self.current_split[1] == [1, -1]:\n            check, l_reward, r_reward = self.evaluate_split_condition()\n            if check:\n                if l_reward > r_reward:\n                    self.pending_list.append(self.current_split[1])\n                    self.split_list.pop(0)\n                    self.split_list.pop(0)\n                    self.current_split = self.split_list[:2]\n                else:\n                    self.pending_list.append(self.current_split[0])\n                    self.current_split = self.split_list[2:4]\n        if any(-1 not in sublist for sublist in self.split_list):\n            check, l_reward, r_reward = self.evaluate_split_condition()\n            if check:\n                if l_reward > r_reward:\n                    self.pending_list.append(self.current_split[1])\n                    self.current_split = self.split_list[:2]\n                else:\n                    self.pending_list.append(self.current_split[0])\n                    self.current_split = self.split_list[2:4]\n            elif len(self.pending_list) > 0:\n                if self.pending_list[0] == [0, -1] or self.pending_list[0][1] == 0:\n                    self.pending_list.pop(0)\n                    self.current_split = self.split_list[:2]\n                if self.pending_list[0] == [1, -1] or self.pending_list[0][1] == 1:\n                    self.pending_list.pop(0)\n                    self.current_split = self.split_list[2:4]\n                self.split()\n\n\n\n\n\n\n\n    def evaluate_split_condition(self):\n        return check, l_reward, r_reward\n\n\n    def generate_context_bandit(self):\n\n\n    def run_aggregate_context(self):\n        return reward_ts, reward_ucb
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Progetto_Nuovo/Data_Structures/ContextClass.py b/Progetto_Nuovo/Data_Structures/ContextClass.py
--- a/Progetto_Nuovo/Data_Structures/ContextClass.py	(revision 2a44e236b1aa36e3b4740a490e71398e900bbcde)
+++ b/Progetto_Nuovo/Data_Structures/ContextClass.py	(date 1666446303183)
@@ -16,8 +16,8 @@
 
     def split(self):
         if len(self.current_split) == 0:
-            self.current_split.append(split_list[0])
-        if current_split[0] == [-1, -1]:
+            self.current_split.append(self.split_list[0])
+        if self.current_split[0] == [-1, -1]:
             self.current_split.pop(0)
             self.split_list.pop(0)
             self.current_split.append(self.split_list[:2])
Index: Progetto_Nuovo/Environment/NonStationaryEnvironment.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Progetto_Nuovo.Social_Influence.SocialInfluence import *\n\n\nclass NonStationaryEnvironment:\n    def __init__(self, n_arms, customer_class, lambda_coeff, n_prod):\n        self.n_arms = n_arms\n        self.customer_class = customer_class\n        self.lambda_coeff = lambda_coeff\n        self.n_prod = n_prod\n        self.t = 0\n\n    def round(self, configuration, prices, alpha_ratios, item_sold_mean, phase):\n        prices_configuration = np.zeros(self.n_prod)\n        for product in range(self.n_prod):\n            prices_configuration[product] = prices[product][configuration[product]]\n        simulator = SocialInfluence(self.lambda_coeff, alpha_ratios, item_sold_mean, self.customer_class,\n                                    prices_configuration, self.n_prod, configuration)\n        simulator.abrupt_simulation(phase)\n        return simulator.reward, simulator.bought, simulator.actual_users
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Progetto_Nuovo/Environment/NonStationaryEnvironment.py b/Progetto_Nuovo/Environment/NonStationaryEnvironment.py
--- a/Progetto_Nuovo/Environment/NonStationaryEnvironment.py	(revision 2a44e236b1aa36e3b4740a490e71398e900bbcde)
+++ b/Progetto_Nuovo/Environment/NonStationaryEnvironment.py	(date 1666446303173)
@@ -16,4 +16,4 @@
         simulator = SocialInfluence(self.lambda_coeff, alpha_ratios, item_sold_mean, self.customer_class,
                                     prices_configuration, self.n_prod, configuration)
         simulator.abrupt_simulation(phase)
-        return simulator.reward, simulator.bought, simulator.actual_users
\ No newline at end of file
+        return simulator.reward, simulator.bought, simulator.actual_users
Index: Progetto_Nuovo/Data/user_class_1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"n_users\": 100,\n  \"binary_features\": [0, 0],\n  \"average_alphas\": [0.05, 0.2, 0.1, 0.3, 0.2, 0.15],\n  \"graph_probabilities\": [[0.0, 0.25, 0.25, 0.25, 0.25],\n  [0.25, 0.0, 0.25, 0.25, 0.25],\n  [0.25, 0.25, 0.0, 0.25, 0.25],\n  [0.25, 0.25, 0.25, 0.0, 0.25],\n  [0.25, 0.25, 0.25, 0.25, 0.0]],\n  \"conversion_rates\": [[0.2, 0.3, 0.1, 0.32], [0.32, 0.14, 0.25, 0.32], [0.32, 0.19, 0.21, 0.34], [0.27, 0.28, 0.24, 0.18], [0.09, 0.35, 0.39, 0.27]],\n  \"reservation_prices\": [[18, 15, 20, 30, 25]],\n  \"average_items_sold\": [[3, 2, 5, 8], [9, 3, 4, 5], [2, 3, 6, 8], [1, 7, 4, 4], [6, 4, 3, 2]]\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Progetto_Nuovo/Data/user_class_1.json b/Progetto_Nuovo/Data/user_class_1.json
--- a/Progetto_Nuovo/Data/user_class_1.json	(revision 2a44e236b1aa36e3b4740a490e71398e900bbcde)
+++ b/Progetto_Nuovo/Data/user_class_1.json	(date 1666446303164)
@@ -1,12 +1,12 @@
 {
   "n_users": 100,
   "binary_features": [0, 0],
-  "average_alphas": [0.05, 0.2, 0.1, 0.3, 0.2, 0.15],
-  "graph_probabilities": [[0.0, 0.25, 0.25, 0.25, 0.25],
-  [0.25, 0.0, 0.25, 0.25, 0.25],
-  [0.25, 0.25, 0.0, 0.25, 0.25],
-  [0.25, 0.25, 0.25, 0.0, 0.25],
-  [0.25, 0.25, 0.25, 0.25, 0.0]],
+  "average_alphas": [0.02, 0.3, 0.01, 0.19, 0.3, 0.18],
+  "graph_probabilities": [[0.0, 0.9, 0.01, 0.02, 0.07],
+                          [0.25, 0.0, 0.25, 0.25, 0.25],
+                          [0.25, 0.25, 0.0, 0.25, 0.25],
+                          [0.25, 0.25, 0.25, 0.0, 0.25],
+                          [0.25, 0.25, 0.25, 0.25, 0.0]],
   "conversion_rates": [[0.2, 0.3, 0.1, 0.32], [0.32, 0.14, 0.25, 0.32], [0.32, 0.19, 0.21, 0.34], [0.27, 0.28, 0.24, 0.18], [0.09, 0.35, 0.39, 0.27]],
   "reservation_prices": [[18, 15, 20, 30, 25]],
   "average_items_sold": [[3, 2, 5, 8], [9, 3, 4, 5], [2, 3, 6, 8], [1, 7, 4, 4], [6, 4, 3, 2]]
